openapi: 3.0.0
info:
  version: 1.1.0
  title: ContactManager API
  description: The API documentation for ContactManager, a Web-based contact manager created for the small project for COP 4331.
    <br><br>Please note that all API documentation will be done with a local instance of Swagger, will use OpenAPI 3.0.0, and [can be found on our GitHub](https://github.com/jeffreydivi/ContactManager).

servers:
  - description: ContactManager Production
    url: https://contactmanager.xyz/
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/jeffreydivi/ContactManager/1.1.0

tags:
  - name: Account
    description: Authenticate and manage accounts.
  - name: Contacts
    description: Manage the contact library.

components:
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
  schemas:
    Error404:
      type: object
      required:
        - err_code
        - description
      properties:
        err_code:
          type: integer
          description: A numeric error code.
          example: 404
        description:
          type: string
          description: A human-readable explanation of the error.
          example: Contact not found.
    Error403:
      type: object
      required:
        - err_code
        - description
      properties:
        err_code:
          type: integer
          description: A numeric error code.
          example: 403
        description:
          type: string
          description: A human-readable explanation of the error.
          example: You do not have permission to view this contact.
    Error401:
      type: object
      required:
        - err_code
        - description
      properties:
        err_code:
          type: integer
          description: A numeric error code.
          example: 401
        description:
          type: string
          description: A human-readable explanation of the error.
          example: You are not logged in.
    Error400:
      type: object
      required:
        - err_code
        - description
      properties:
        err_code:
          type: integer
          description: A numeric error code.
          example: 400
        description:
          type: string
          description: A human-readable explanation of the error.
          example: Entity already exists.
    EditUser:
      type: object
      required:
        - username
      properties:
        first_name:
          type: string
          description: The user's first name.
          example: John
        last_name:
          type: string
          description: The user's last name.
          example: Smith
        username:
          type: string
          description: The user's username.
          example: jsmith
      description: The user-editable sections of a user entry.
    User:
      allOf:
        - type: object
          required:
            - user_id
            - creation
          properties:
            user_id:
              type: integer
              description: The user ID.
              example: 7
            creation:
              type: string
              format: date-time
              description: The account's creation date and time.
              example: Thu, 27 May 2021 19:56:01 GMT
        - $ref: '#/components/schemas/EditUser'
      description: A complete single user entry.
    EditContact:
      type: object
      properties:
        first_name:
          type: string
          description: The contact's first name.
          example: Rose
        last_name:
          type: string
          description: The contact's last name.
          example: Tyler
        phone:
          type: string
          description: The contact's phone number.
          example: (407) 555-1337
        email:
          type: string
          description: The contact's email address.
          example: rtyler@example.com
        address:
          type: string
          description: The contact's address.
          example: 2000 Central Florida Avenue. Orlando, FL 32816
      description: The user-editable sections of a contact entry.
    Contact:
      allOf:
        - type: object
          required:
            - user_id
            - id
          properties:
            user_id:
              type: integer
              description: The user who created the contact.
              example: 7
            id:
              type: integer
              description: The contact entry ID.
              example: 42
            creation:
              type: string
              format: date-time
              description: The account's creation date and time.
              example: Thu, 27 May 2021 19:56:01 GMT
        - $ref: '#/components/schemas/EditContact'
      description: A complete single contact entry.
security:
  - BasicAuth: []

paths:
  /user/:
    get:
      tags:
        - Account
      operationId: get_user
      description: Returns the authenticated user's profile.
      responses:
        '200':
          description: Return the currently logged-in user's account information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: The user is not logged in.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
    post:
      operationId: create_user
      tags:
        - Account
      security: []
      description: Create a new account.
      requestBody:
        description: Data for the new account.
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/EditUser'
                - properties:
                    password:
                      type: string
                      description: The user's password.
                      example: CorrectHorseBatteryStaple
                  required:
                    - password
      responses:
        '200':
          description: Returns the newly create user's data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Errs if the user already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
    patch:
      deprecated: true
      tags:
        - Account
      operationId: edit_user
      description: Update the authenticated user's profile
      requestBody:
        required: true
        description: The new user data. Provided fields will override existing ones.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/EditUser'
                - properties:
                    password:
                      type: string
                      description: Set a new password.
                      example: CorrectHorseBatteryStaple
      responses:
        '200':
          description: Returns the updated user data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: The user is not logged in.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
  /contact/list/:
    get:
      operationId: get_contacts_list
      tags:
        - Contacts
      description: Get a list of all contacts.
      responses:
        '200':
          description: Returns an array of all known contacts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contact'
        '401':
          description: The user is not logged in.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
  /contact/search/:
    post:
      operationId: search_contacts
      tags:
        - Contacts
      description: Find all contacts that match a given query.
      requestBody:
        description: Create the search request.
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - search
              properties:
                search:
                  type: string
                  description: A search query throughout a user's contacts list.
                  example: Rose Tyler
      responses:
        '200':
          description: Returns an array of all matching contacts.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contact'
        '401':
          description: The user is not logged in.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'

  /contact/add/:
    post:
      operationId: create_contact
      tags:
        - Contacts
      description: Add a new contact.
      responses:
        '200':
          description: Returns the newly-created contact.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'

      requestBody:
        description: Data to add to the new contact.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditContact'

  /contact/{id}/:
    get:
      operationId: get_contact
      tags:
        - Contacts
      description: Get a single contact.
      parameters:
        - name: id
          in: path
          description: Contact ID
          required: true
          schema:
            type: integer

      responses:
        '200':
          description: Return a single contact entry by its ID.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
        '401':
          description: The user is not logged in.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '403':
          description: A user accesses a contact they do not own.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Error403'
                  - properties:
                      err_code:
                        example: 403
                      description:
                        example: You do not have permission to view this contact.
        '404':
          description: The contact is not found.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Error404'
                  - properties:
                      err_code:
                        example: 404
                      description:
                        example: Contact not found.
    patch:
      tags:
        - Contacts
      operationId: edit_contact
      description: Updates a single contact.
      parameters:
        - name: id
          in: path
          description: Contact ID
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        description: The new contact data. Provided fields will override existing ones.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditContact'
      responses:
        '200':
          description: Returns the updated contact data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
        '401':
          description: The user is not logged in.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '403':
          description: A user accesses a contact they do not own.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403'
        '404':
          description: The contact is not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
    delete:
      tags:
        - Contacts
      operationId: delete_contact
      description: Delete a contact.
      parameters:
        - name: id
          in: path
          description: Contact ID
          required: true
          schema:
            type: integer

      responses:
        '200':
          description: Returns success of deletion.
          content:
            application/json:
              schema:
                type: object
                properties:
                  description:
                    type: string
                    example: Contact successfully deleted.
        '401':
          description: The user is not logged in.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '403':
          description: A user accesses a contact they do not own.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403'
        '404':
          description: The contact is not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
